name: "Build and Deploy"

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Name of the repository'
        required: true
      repo_owner:
        description: 'Owner of the repository'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/create-github-app-token@v2
        id: repo-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}
          owner: ${{ github.event.inputs.repo_owner }}
          repositories: ${{ github.event.inputs.repo_name }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}
          token: ${{ steps.repo-token.outputs.token }}

      - name: Detect java version
        run: |
          if [ -f "pom.xml" ]; then
            echo "Maven project detected."
            JAVA_VERSION=$(grep -m1 '<java.version>' pom.xml | sed -E 's/.*<java.version>([^<]+)<\/java.version>.*/\1/')
            if [ -z "$JAVA_VERSION" ]; then
              JAVA_VERSION=$(grep -m1 '<maven.compiler.source>' pom.xml | sed -E 's/.*<maven.compiler.source>([^<]+)<\/maven.compiler.source>.*/\1/')
            fi
            if [ -z "$JAVA_VERSION" ]; then
              JAVA_VERSION="21"
            fi
            echo "Java version found in pom.xml: $JAVA_VERSION"
          else
            echo "No pom.xml found. Using default Java version."
            JAVA_VERSION="21"
          fi
          echo "JAVA_VERSION=$JAVA_VERSION" >> $GITHUB_ENV

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build project
        run: mvn clean package -DskipTests

      - name: Deploy
        run: |
          echo "Deploying application..."
          ls -l target
          # Add your deployment commands here